unit Adapter.Controller.Itens;

interface

uses Adapter.Model.Interfaces, System.Generics.Collections;

Type
  TControllerItens = class(TInterfacedObject, iControllerItens)
  private
    FLista : TList<TITens>;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iControllerItens;
    function Add(Value: TItens): iControllerItens;
    function Itens: TList<TItens>;
  end;

implementation

uses
  System.SysUtils;

{ TControllerItens }

constructor TControllerItens.Create;
begin
  FLista := TList<TITens>.Create;
end;

destructor TControllerItens.Destroy;
begin
  FreeAndNil(FLista);
  inherited;
end;

class function TControllerItens.New: iControllerItens;
begin
  Result := Self.Create;
end;

end.
